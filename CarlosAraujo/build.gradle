plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.sonarqube' version "6.2.0.5505"
	id 'jacoco'
	id 'co.uzzu.dotenv.gradle' version '4.0.0'
}

sonar {
	properties {
		property "sonar.projectKey", "CarlosAraujo_ExpenseManager"
		property "sonar.host.url", "http://localhost:9000"
		property "sonar.token", env.SONAR_TOKEN.orElse("")

		property "sonar.sources", "src/main/java"
		property "sonar.tests", "src/test/java"
		property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"

		property "sonar.coverage.exclusions", [
				"**/config/**",
				"**/dto/**",
				"**/entity/**",
				"**/CarlosAraujoApplication.java",
				"**/exception/**",
				"**/mapper/**",
				"**/controller/**"
		].join(",")
	}
}


group = 'br.edu.infnet'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {

	// OPEN API
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9"

	// SPRING
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "org.springframework.boot:spring-boot-starter-security:3.5.4"
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation "org.springframework.boot:spring-boot-starter-data-jpa:3.5.4"

	// LOMBOK
	compileOnly 'org.projectlombok:lombok:1.18.38'
	annotationProcessor 'org.projectlombok:lombok:1.18.38'

	// MAPPER
	implementation "org.mapstruct:mapstruct:1.6.3"
	annotationProcessor "org.mapstruct:mapstruct-processor:1.6.3"
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"

	// DATABASE
	runtimeOnly 'org.postgresql:postgresql'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

	// ENV
	implementation 'io.github.cdimascio:dotenv-java:3.2.0'

	// TESTS
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
	jvmArgs '-XX:+EnableDynamicAgentLoading'

	reports {
		junitXml.required = true
		html.required = true
	}
}

test {
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		html.required = true
	}
}
